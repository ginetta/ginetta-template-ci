#
# Generic references
#
default_box: &default_box
  docker:
    - image: circleci/node:8.9

global_env: &global_env
  environment:
    - P_CLIENT_NAME: "<%= client.toLowerCase() %>"
    - P_PROJECT_NAME: "<%= project.toLowerCase() %>"
    <% if (!hostLive) { %>#<% } %>- P_LIVE_URL: "<%= liveURL %>"

default_setup: &default_setup
  <<: *default_box
  <<: *global_env
  working_directory: /tmp/ginetta-ci

#
# CircleCI jobs and pipelines
#
version: 2

jobs:
  # I think we should enforce a tests job, even if an app does not declare any
  # to be discussed

  # Build the app
  build:
    <<: *default_setup

    steps:
      - checkout

      - run:
          name: Display node and npm informations
          command: |
            echo "node version $(node -v) running"
            echo "npm version $(npm -v) running"

      # Restore dependencies cache
      - restore_cache:
          keys:
            - modules-cache-{{ checksum "package-lock.json" }}
            # fallback to using the latest cache if no exact match is found
            - modules-cache

      - run:
          name: Install dependencies
          command: npm install

      - run:
          name: Build Skeleton
          command: npm run build

      - persist_to_workspace:
          root: /tmp/ginetta-ci
          paths:
            - build/*
            - .circleci/*

      - save_cache:
          paths:
            - ./node_modules
          key: modules-cache-{{ checksum "package-lock.json" }}

  deploy_staging:
    <<: *default_setup

    steps:
      - run:
          name: Install deploy tools
          command: sudo apt install -y rsync

      - attach_workspace:
          at: /tmp/ginetta-ci

      - add_ssh_keys:
          fingerprints:
            - "e6:f9:b5:46:92:6a:e5:87:f4:c3:99:ee:a7:f1:1b:57"

      - deploy:
          name: Deploy on Staging
          command: |
            # TODO should not the ABSOLUTE_DIRECTORY be directly an environment variable?
            # Get the directory used server-side
            DIRECTORY="$P_CLIENT_NAME.ginetta.net/$P_PROJECT_NAME"
            [[ $P_CLIENT_NAME == ginetta ]] && DIRECTORY="preview.ginetta.net/$P_PROJECT_NAME"

            # Get the absolute directory
            ABSOLUTE_DIRECTORY="$G_NINE_STAGING_HOMEPATH/$DIRECTORY/branch-circle/$CIRCLE_BRANCH/"

            bash $CIRCLE_WORKING_DIRECTORY/.circleci/deploy-rsync.sh \
              -b $CIRCLE_BRANCH \
              -s $CIRCLE_WORKING_DIRECTORY/build/ \
              -h $G_NINE_STAGING_HOST \
              -u $G_NINE_STAGING_USER \
              -d $ABSOLUTE_DIRECTORY

  # There is probably a way to have this less redundant
  deploy_prod:
    <<: *default_setup

    steps:
      - run:
          name: Install deploy tools
          command: sudo apt install -y rsync

      - attach_workspace:
          at: /tmp/ginetta-ci

      - deploy:
          name: Deploy on Production
          command: |
            # TODO should not the ABSOLUTE_DIRECTORY be directly an environment variable?
            # Get the directory used server-side
            DIRECTORY="$P_CLIENT_NAME.ginetta.net/$P_PROJECT_NAME"
            [[ $P_CLIENT_NAME == ginetta ]] && DIRECTORY="preview.ginetta.net/$P_PROJECT_NAME"

            # Get the absolute directory
            ABSOLUTE_DIRECTORY="$G_NINE_STALIVE_HOMEPATH/$DIRECTORY/branch-circle/$CIRCLE_BRANCH/"

            bash $CIRCLE_WORKING_DIRECTORY/.circleci/deploy-rsync.sh \
              -b $CIRCLE_BRANCH \
              -s $CIRCLE_WORKING_DIRECTORY/build/ \
              -h $G_LIVE_STAGING_HOST \
              -u $G_LIVE_STAGING_USER \
              -d $ABSOLUTE_DIRECTORY

workflows:
  version: 2
  # Build the app,
  # If the branch is release, deploy live on ginetta.net
  # else deploy on staging, with a custom URL for each branch
  pipeline:
    jobs:
      - build
      - deploy_staging:
          filters:
            branches:
              # Can we move that to an env variable?
              ignore: release
          context: org-global
          requires:
            - build
      - deploy_prod:
          filters:
            branches:
              # Can we move that to an env variable?
              only: release
          context: org-global
          requires:
            - build